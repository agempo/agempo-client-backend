openapi: 3.0.3
info:
  title: Cliente Backend - Agempo 1.0
  description: API para gestão do lado do cliente no sistema Agempo
  version: 1.0.0
tags:
  - name: login
    description: Autenticação e autorização do cliente
  - name: cliente
    description: clientes do Agempo
  - name: estabelecimento
    description: Estabelecimentos disponiveis para o cliente
  - name: agendamento
    description: Agendamento de serviços
  - name: assinatura
    description: Gestão de assinaturas
servers:
  - url: /api/v1/
security:
  - JWT: []
paths:
  /login:
    post:
      tags:
        - login
      summary: realizar login
      description: realixar login com email e senha
      operationId: loginCliente
      security: []  
      requestBody:
        description: realiza a autenticação de um cliente
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      responses:
        '200':
          description: sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: "jwt"
        '401':
          description: Unauthorized
  /cliente:
    post:
      tags:
        - cliente
      summary: Adicionar novo cliente
      description: Adicionar novo cliente
      operationId: addCliente
      security: []  
      requestBody:
        description: Cria novo cliente no Agempo
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/clienteRequest'
        required: true
      responses:
        '201':
          description: sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/clienteResponse'          
        '400':
          description: Cliente inválido

    get:
      tags:
        - cliente
      summary: lista clientes
      description: lista clientes
      operationId: getAllClientes
      parameters:
        - name: listarTodos
          in: query
          description: listar clientes inativos
          required: true
          schema:
            type: boolean
      responses:
        '200':
          description: sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/clienteResponse'          
  /cliente/{clienteId}:
    get:
      tags:
        - cliente
      summary: Busca cliente pelo Id
      description: Busca cliente pelo Id
      operationId: getClienteByID
      parameters:
        - name: clienteId
          in: path
          description: Id do cliente
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/clienteResponse'          
        '404':
          description: Cliente não encontrado 
    put:
      tags:
        - cliente
      summary: Altera cliente
      description: Altera cliente
      operationId: updateCliente
      parameters:
        - name: clienteId
          in: path
          description: Id do cliente
          required: true
          schema:
            type: integer
      requestBody:
        description: cliente alterado com sucesso
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/clienteRequest'
      responses:
        '200':
          description: sucesso
    delete:
      tags:
        - cliente
      summary: Deleta cliente
      description: delete a pet
      operationId: deletePet
      parameters:
        - name: clienteId
          in: path
          description: Cliente id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: sucesso
  /estabelecimento:
    get:
      tags:
        - estabelecimento
      summary: Lista os estabelecimentos disponíveis para o cliente
      description: Lista os estabelecimentos disponíveis para o cliente
      operationId: getEstabelecimentos
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/estabelecimento'      
  /estabelecimento/{estabelecimentoId}:
    get:
      tags:
        - estabelecimento
      summary: Lista os estabelecimentos disponíveis para o cliente
      description: Lista os estabelecimentos disponíveis para o cliente
      operationId: getEstabelecimentoPorId
      parameters:
      - name: estabelecimentoId
        in: path
        description: Cliente id to delete
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/estabelecimento'     
  /estabelecimento/{estabelecimentoId}/servicos:
    get:
      tags:
        - estabelecimento
      summary: Lista os serviços do estabelecimento
      description: Lista os serviços do estabelecimento
      operationId: getServicosPorEstabelecimento
      parameters:
        - name: estabelecimentoId
          in: path
          description: Id do cliente
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/servico'          
        '400':
          description: Estabelecimento não encontrado
  /estabelecimento/{estabelecimentoId}/servicos/profissionais: 
    get:
      tags:
        - estabelecimento
      summary: Lista os profissionais de um determinado serviço daquele estabelecimento
      description: Lista os profissionais de um determinado serviço daquele estabelecimento
      operationId: getProfissionaisPorEstabelecimento
      parameters:
        - name: estabelecimentoId
          in: path
          description: Id do cliente
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/profissional'
        '400':
          description: Id inválidos
  /estabelecimento/{estabelecimentoId}/{servicoId}/{profissionalId}/horarios:
    get:
      tags:
        - estabelecimento
      summary: Lista os horários disponíveis de um certo profissional e serviço
      description: Lista os horarios disponíveis de um certo profissional e serviço
      operationId: getHorariosPorEstabelecimentoProfissional
      parameters:
        - name: estabelecimentoId
          in: path
          description: Id do cliente
          required: true
          schema:
            type: integer
        - name: servicoId
          in: path
          description: Id do servico
          required: true
          schema:
            type: integer
        - name: profissionalId
          in: path
          description: Id do profissional
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/horario'          
        '400':
          description: Id inválidos
  /estabelecimento/{estabelecimentoId}/{servicoId}/horarios:
    get:
      tags:
        - estabelecimento
      summary: Lista os horários disponíveis de um serviço
      description: Lista os horários disponíveis de um serviço
      operationId: getHorariosPorEstabelecimento
      parameters:
        - name: estabelecimentoId
          in: path
          description: Id do cliente
          required: true
          schema:
            type: integer
        - name: servicoId
          in: path
          description: Id do servico
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/horario'          
        '400':
          description: Id inválidos
  /agendamento:
    post:
      tags:
        - agendamento
      summary: Agenda um horário para o cliente
      description: Agenda um horário para o cliente
      operationId: agendarServico
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/agendamentoRequest'
        required: true
      responses:
        '201':
          description: sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/agendamentoResponse'
        '400':
          description: Agendamento inválido
    get:
      tags:
        - agendamento
      summary: Lista os agendamentos do cliente
      description: Lista os agendamentos do cliente
      operationId: listarAgendamentos
      responses:
        '200':
          description: sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/agendamentoResponse'
  /agendamento/{agendamentoId}:
    get:
      tags:
        - agendamento
      summary: Lista os agendamentos do cliente
      description: Lista os agendamentos do cliente
      operationId: listarAgendamentoPorId
      parameters:
      - name: agendamentoId
        in: path
        description: Id do agendamento
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: sucesso
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/agendamentoResponse'
        '404':
          description: Agendamento não encontrado
components:
  securitySchemes:
    JWT: 
      type: apiKey
      in: header
      name: authorization
  schemas:
    Login:
      type: object
      properties:
        email:
          type: string
          format: "user@email.com"
          example: "user@email.com"
        senha:
          type: string
          format: "password"
          example: "password"
    clienteRequest:
      type: object
      properties:
        nome:
          type: string
          format: string
          example: "nome"
        sobrenome:
          type: string
          format: string
          example: "sobrenome"
        email:
          type: string
          format: string
          example: "user@email.com"
        senha:
          type: string
          format: string
          example: "password"
        cpf:
          type: string
          example: "cpf"
        data_nascimento:
          type: string
          format: date
    clienteResponse:
      type: object
      properties:
        cliente_id:
          type: integer
          format: int64
          example: 1
        nome:
          type: string
          format: string
          example: "nome"
        sobrenome:
          type: string
          format: string
          example: "sobrenome"
        email:
          type: string
          format: string
          example: "user@email.com"
        cpf:
          type: string
          example: "cpf"
        data_nascimento:
          type: string
          format: date
    estabelecimento:
      type: object
      properties:
        estabelecimento_id:
          type: integer
          format: int64
          example: 1
        nome_estabelecimento:
          type: string
          format: string
          example: "nome"
        descricao_estabelecimento:
          type: string
          format: string
          example: "descrição"
        contato:
          type: string
          format: string
          example: "descrição"
    servico: 
      type: object
      properties:
        servico_id:
          type: integer
          format: int64
          example: 1
        nome_servico:
          type: string
          format: string
          example: "nome"
        descricao_servico:
          type: string
          format: string
          example: "descrição"
    profissional: 
      type: object
      properties:
        profissional_id:
          type: integer
          format: int64
          example: 1
        nome_profissional:
          type: string
          format: string
          example: "nome"
        idade:
          type: integer
          format: integer
        especialidade:
          type: string
          format: string
          example: "especialidade"
        urlFoto:
          type: string
          format: string
          example: "urlfotoS3"
    horario:
      type: object
      properties:
        data:
          type: string
          format: date
          example: 2004-12-20
        horario_inicio:
          type: string
          format: time
          example: 20:30
        horario_fim:
          type: string
          format: time
          example: 21:30
    agendamentoRequest: 
      type: object
      properties:
        estabelecimentoId:
          type: integer
          format: int64
          example: 1
        servicoId:
          type: integer
          format: int64
          example: 1
        horario:
          type: string
          format: time
          example: 20:30
        profissionalId:
          type: integer
          format: int64
          example: 1
    agendamentoResponse: 
      type: object
      properties:
        agendamentoId:
          type: integer
          format: int64
          example: 1
        horario:
          type: string
          format: time
          example: 20:30
        profissionalId:
          type: integer
          format: int64
          example: 1
        qrCode:
          type: string
          format: string
        status:
          type: string
          enum:
            - pendente
            - realizado
